
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      - "APP_NAME=${APP_NAME}"
      - "APP_ENV=${APP_ENV}"
      - "APP_KEY=${APP_KEY}"
      - "APP_DEBUG=${APP_DEBUG}"
      - "APP_URL=${APP_URL}"
      - "LOG_CHANNEL=${LOG_CHANNEL}"
      - "DB_CONNECTION=${DB_CONNECTION}"
      - "DB_HOST=${DB_HOST}"
      - "DB_PORT=${DB_PORT}"
      - "DB_DATABASE=${DB_DATABASE}"
      - "DB_USERNAME=${DB_USERNAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "RABBITMQ_HOST=${RABBITMQ_HOST}"
      - "RABBITMQ_PORT=${RABBITMQ_PORT}"
      - "RABBITMQ_USER=${RABBITMQ_USER}"
      - "RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}"
      - "RABBITMQ_VHOST=${RABBITMQ_VHOST}"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - vendor:/var/www/vendor
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_ROOT_PASSWORD: mypassword
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: myrabbitmquser
      RABBITMQ_DEFAULT_PASS: myrabbitmqpassword
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  vendor:
